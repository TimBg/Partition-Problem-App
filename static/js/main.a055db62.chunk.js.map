{"version":3,"sources":["scripts/LDMalgorithm.js","reducers/mainReducer.js","App.js","redux/store.js","index.js"],"names":["Heap","require","difference","heap","a","pop","b","value","children","concat","push","routing","node","result","level","set1","payload","set2","forEach","child","LDM","arr","length","item","size","peek","_","SPLIT_ARR","initialState","mainReducer","copyOfState","state","action","type","alert","newState","cloneDeep","isNumeric","find","console","log","App","store","useState","undefined","setResult","dispatch","useDispatch","splitArr","e","file","target","files","reader","FileReader","onload","json","JSON","parse","set","stringify","getState","branch1","error","readAsText","className","InputLabel","Input","onChange","reducers","combineReducers","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAAMA,EAAOC,EAAQ,IAEfC,EAAa,SAAAC,GACf,IAAIC,EAAID,EAAKE,MACTC,EAAIH,EAAKE,MAEbD,EAAEG,MAAQH,EAAEG,MAAQD,EAAEC,MACtBH,EAAEI,SAAWJ,EAAEI,SAASC,OAAOH,GAC/BH,EAAKO,KAAKN,IAGRO,EAAU,SAAVA,EAAWC,EAAMC,GAAuB,IAAfC,EAAc,uDAAN,EAE/BA,EAAQ,EACRD,EAAOE,KAAKL,KAAKE,EAAKI,SAEtBH,EAAOI,KAAKP,KAAKE,EAAKI,SAG1BF,IAEAF,EAAKJ,SAASU,SAAQ,SAAAC,GAClBR,EAAQQ,EAAON,EAAQC,OAIlBM,EAAM,SAAAC,GACf,IAAIR,EAAS,CACTE,KAAM,GACNE,KAAM,IAGV,GAAmB,IAAfI,EAAIC,OAAc,OAAOT,EAE7B,IAAIV,EAAO,IAAIH,GAAK,SAACI,EAAGE,GACpB,OAAIF,EAAEG,QAAUD,EAAEC,MAAcD,EAAEM,KAAOR,EAAEQ,KACpCN,EAAEC,MAAQH,EAAEG,SAavB,IAVAc,EAAIH,SAAQ,SAAAK,GACRpB,EAAKO,KACD,CACIH,MAAOgB,EACPX,KAAMW,EACNf,SAAU,GACVQ,QAASO,OAIdpB,EAAKqB,OAAS,GACjBtB,EAAWC,GAKf,OAFAQ,EAAQR,EAAKsB,OAAQZ,EAAQ,GAEtBA,GCrDPa,EAAIzB,EAAQ,IAEV0B,EAAY,YAEdC,EAAe,CACff,OAAQ,MAoCGgB,EAjCK,WAAmC,IAC/CC,EADaC,EAAiC,uDAAzBH,EAAcI,EAAW,uCAGlD,OAAQA,EAAOC,MACX,KAAKN,EAEG,IAAKK,EAAOX,IAER,OADAa,MAAM,uBACCH,EAGX,IAAII,EAAWT,EAAEU,UAAUL,GACvBM,GAAaL,EAAOX,IAAIiB,MAAK,SAAAf,GAAI,MAAoB,kBAATA,KAOjD,OALKc,IACAF,EAAStB,OAASO,EAAIY,EAAOX,KAC7BkB,QAAQC,IAAIL,EAAStB,QACrBiB,EAAcK,GAEZL,EACd,QACI,OAAOC,ICYJU,G,MAnCH,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACKC,wBAASC,GADd,mBAChB/B,EADgB,KACRgC,EADQ,KAEjBC,EAAWC,cAEXC,EAAW,SAACC,GACd,IAAIC,EAAOD,EAAEE,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACjBD,EAAOE,OACI,SAAUN,GACb,IACI,IAAIO,EAAOC,KAAKC,MAAMT,EAAEE,OAAOtC,QAC/BiC,GDiBCzB,ECjBcmC,EAAKG,IDkB7B,CACH1B,KAAMN,EACNN,IAAKA,KCnBOwB,EAAUY,KAAKG,UAAUlB,EAAMmB,WAAWC,QAAQjD,OAAQ,KAAM,OAClE,MAAOkD,GACL7B,MAAM,SDcL,IAAAb,GCVbgC,EAAOW,WAAWd,GAClBD,EAAEE,OAAO5C,MAAQ,IAGrB,OACI,sBAAK0D,UAAU,MAAf,UACI,sBAAKA,UAAU,UAAf,UACI,cAACC,EAAA,EAAD,oBACA,cAACC,EAAA,EAAD,CAAOlC,KAAK,OAAOmC,SAAU,SAACnB,GAAD,OAAOD,EAASC,SAEjD,qBAAKgB,UAAU,UAAf,SACgB,SAAXpD,GAAqBA,S,gBC/BlCwD,EAAWC,YAAgB,CAC3BR,QAASjC,IAKEa,EAFH6B,YAAYF,EAAUG,YAAgBC,M,MCDlDC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUlC,MAAOA,EAAjB,SACI,cAAC,EAAD,CAAKA,MAAOA,QAGpBmC,SAASC,eAAe,W","file":"static/js/main.a055db62.chunk.js","sourcesContent":["const Heap = require('heap');\r\n\r\nconst difference = heap => {\r\n    let a = heap.pop();\r\n    let b = heap.pop();\r\n\r\n    a.value = a.value - b.value;\r\n    a.children = a.children.concat(b);\r\n    heap.push(a);\r\n};\r\n\r\nconst routing = (node, result, level = 0) => {\r\n\r\n    if (level % 2) {\r\n        result.set1.push(node.payload);\r\n    } else {\r\n        result.set2.push(node.payload);\r\n    }\r\n\r\n    level++;\r\n\r\n    node.children.forEach(child => {\r\n        routing(child, result, level)\r\n    });\r\n};\r\n\r\nexport const LDM = arr => {\r\n    let result = {\r\n        set1: [],\r\n        set2: []\r\n    };\r\n\r\n    if (arr.length === 0) return result;\r\n\r\n    let heap = new Heap((a, b) => {\r\n        if (a.value === b.value) return b.node - a.node;\r\n        return b.value - a.value;\r\n    });\r\n\r\n    arr.forEach(item => {\r\n        heap.push(\r\n            {\r\n                value: item,\r\n                node: item,\r\n                children: [],\r\n                payload: item,\r\n            });\r\n    });\r\n\r\n    while (heap.size() > 1) {\r\n        difference(heap);\r\n    }\r\n\r\n    routing(heap.peek(), result, 0);\r\n\r\n    return result;\r\n}","import { LDM } from './../scripts/LDMalgorithm';\r\n\r\nlet _ = require('lodash');\r\n\r\nconst SPLIT_ARR = 'SPLIT_ARR';\r\n\r\nlet initialState = {\r\n    result: null,\r\n};\r\n\r\nconst mainReducer = (state = initialState, action) => {\r\n    let copyOfState;\r\n\r\n    switch (action.type) {\r\n        case SPLIT_ARR:\r\n            {\r\n                if (!action.arr) {\r\n                    alert('\\'set\\' key not found');\r\n                    return state\r\n                }\r\n\r\n                let newState = _.cloneDeep(state);\r\n                let isNumeric = !action.arr.find(item => typeof item !== 'number');\r\n\r\n                if (isNumeric) {\r\n                    newState.result = LDM(action.arr);\r\n                    console.log(newState.result);\r\n                    copyOfState = newState;\r\n                }\r\n            }; return copyOfState;\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const split = arr => {\r\n    return {\r\n        type: SPLIT_ARR,\r\n        arr: arr\r\n    }\r\n}\r\n\r\nexport default mainReducer;","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Input, InputLabel } from '@material-ui/core';\n\nimport { split } from './reducers/mainReducer';\n\nimport './App.css';\n\nconst App = ({ store }) => {\n    const [result, setResult] = useState(undefined);\n    const dispatch = useDispatch();\n\n    const splitArr = (e) => {\n        let file = e.target.files[0];\n        let reader = new FileReader();\n        reader.onload = (function (JSONFile) {\n            return function (e) {\n                try {\n                    let json = JSON.parse(e.target.result);\n                    dispatch(split(json.set));\n                    setResult(JSON.stringify(store.getState().branch1.result, null, '\\t'));\n                } catch (error) {\n                    alert('Error');\n                }\n            }\n        })(file);\n        reader.readAsText(file);\n        e.target.value = '';\n    }\n\n    return (\n        <div className='App'>\n            <div className='wrapper'>\n                <InputLabel>Split</InputLabel>\n                <Input type='file' onChange={(e) => splitArr(e)} />\n            </div>\n            <div className='wrapper'>\n                {result !== 'null' && result}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport mainReducer from './../reducers/mainReducer';\r\n\r\n\r\nlet reducers = combineReducers({\r\n    branch1: mainReducer,\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from './redux/store';\n\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App store={store} />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}